# Original config submitted by https://github.com/SherLock707

general {
    lock_cmd = pidof hyprlock || hyprlock # runs hyprlock if it is not already running (this is always run when "loginctl lock-session" is called) 
    unlock_cmd = killall hyprlock && killall waybar && exec waybar # kills hyprlock when unlocking (this is always run when "loginctl unlock-session" is called)
    before_sleep_cmd = loginctl lock-session    # ensures that the session is locked before going to sleep
    after_sleep_cmd = hyprctl dispatch dpms on # turn of screen after sleep (not strictly necessary, but just in case)
    ignore_dbus_inhibit = false             # whether to ignore dbus-sent idle-inhibit requests (used by e.g. firefox or steam)
}

# Lock screen after inactivity
listener {
    timeout = 300                                # 5min
    on-timeout = loginctl lock-session           # lock screen when timeout has passed
}

# Turn screen off after inactivity
listener {
    timeout = 330                                                     # 5.5min
    on-timeout = hyprctl dispatch dpms off                            # screen off when timeout has passed
    on-resume = hyprctl dispatch dpms on && brightnessctl -r          # screen on when activity is detected after timeout has fired.
}

# turn off screen faster if session is already locked
listener {
    timeout = 30                            # 30 seconds
    on-timeout = pidof hyprlock && hyprctl dispatch dpms off # turns off the screen if hyprlock is active
    on-resume = pidof hyprlock && hyprctl dispatch dpms on    # command to run when activity is detected after timeout has fired.
}

# Turn off screen 
# (disabled by default)
# listener {
#     timeout = 630                            # 10.5 min
#     on-timeout = hyprctl dispatch dpms off  # command to run when timeout has passed
#     on-resume = hyprctl dispatch dpms on    # command to run when activity is detected after timeout has fired.
# }

# Suspend # disabled by default
# listener {
   # timeout = 1200                            # 20 min
   # on-timeout = systemctl suspend # command to run when timeout has passed
    # on-resume = notify-send -i $iDIR " Oh! you're back" "Hello !!!"  # command to run when activity is detected after timeout has fired.
# }
